version: "3"

services:
  original:
    hostname: original
    container_name: ${NAME_PREFIX:-ex-5-amqp}-original
    build:
      context: .
      dockerfile: ./Dockerfile
      args:
        - TargetProject=Original

    networks:
      - backend

  intermediate:
    hostname: intermediate
    container_name: ${NAME_PREFIX:-ex-5-amqp}-intermediate
    build:
      context: .
      dockerfile: ./Dockerfile
      args:
        - TargetProject=Intermediate

    networks:
      - backend

  observer:
    hostname: observer
    container_name: ${NAME_PREFIX:-ex-5-amqp}-observer
    build:
      context: .
      dockerfile: ./Dockerfile
      args:
        - TargetProject=Observer

    networks:
      - backend

    environment:
      - OutFilePath=/app/shared_volume/message.txt

    volumes:
      - shared:/app/shared_volume

  httpserver:
    hostname: httpserver
    container_name: ${NAME_PREFIX:-ex-5-amqp}-httpserver
    ports:
        - "${HTTP_SERVER_PORT:-8080}:80"
    build:
      context: .
      dockerfile: ./Dockerfile
      args:
        - TargetProject=HttpServer

    environment:
      - OutFilePath=/app/shared_volume/message.txt

    volumes:
      - shared:/app/shared_volume

    networks:
      - backend

  rabbitmq:
    restart: unless-stopped
    image: rabbitmq:3-management
    container_name: ${NAME_PREFIX:-ex-5-amqp}-rabbitmq
    hostname: rabbitmq
    ports:
      # The standard AMQP protocol port
      - '5672:5672'
      # HTTP management UI
      - '15672:15672'

    # Uncomment to disable rabbitmq logging
    # logging:
    #     driver: none

    environment:
      RABBITMQ_DEFAULT_USER: "rabbit_user"
      RABBITMQ_DEFAULT_PASS: "rabbit_pass"

    networks:
      - backend

networks:
    backend: {}

volumes:
    shared: {}
