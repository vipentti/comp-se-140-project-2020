image: docker/compose:1.27.4

### Define variables
variables:
  E2E_PROJECT_NAME: e2e-test
  DEFAULT_PROJECT_NAME: ex-5-amqp
  tag: "latest"

stages:
  - build
  - test
  - deploy

services:
  - docker:dind

before_script:
  - docker info
  - docker-compose version

build:
  stage: build
  script:
    - ./DevOps/scripts/build-images.sh --tag "${tag}"

test:
  stage: test
  variables:
    # Override defaults
    # Since the application may be running
    # in the default ports
    RABBITMQ_PUBLIC_PORT: 5777
    RABBITMQ_MANAGEMENT_PUBLIC_PORT: 15677
    REDIS_PUBLIC_PORT: 16379
    HTTP_SERVER_PORT: 9512
    APIGATEWAY_PORT: 9513
    E2E: "true"
    ENV_FILE: ".env.e2e"

  script:
    - ./DevOps/scripts/create-test-env-file.sh ${ENV_FILE}
    - docker-compose --project-name $E2E_PROJECT_NAME down -v
    - docker-compose --project-name $E2E_PROJECT_NAME up -d --no-build
    - docker-compose --project-name $E2E_PROJECT_NAME ps
    - 'export EXTRA_RUN_ARGS="--network ${E2E_PROJECT_NAME}_backend"'
    - ./DevOps/scripts/run-docker-tests.sh ./Dockerfile . ${ENV_FILE} ./testresults

  after_script:
    - docker-compose --project-name $E2E_PROJECT_NAME logs --tail="all" original
    - docker-compose --project-name $E2E_PROJECT_NAME logs --tail="all" observer
    - docker-compose --project-name $E2E_PROJECT_NAME logs --tail="all" httpserver
    - docker-compose --project-name $E2E_PROJECT_NAME logs --tail="all" apigateway
    - docker-compose --project-name $E2E_PROJECT_NAME down -v

  artifacts:
    when: always
    paths:
      - ./testresults/**/*.xml
    reports:
      junit:
        - ./testresults/**/*.xml

deploy:
  stage: deploy
  script:
    # Ensure we re-start the containers
    - docker-compose --project-name $DEFAULT_PROJECT_NAME down
    - docker-compose --project-name $DEFAULT_PROJECT_NAME up -d --no-build
    - docker-compose --project-name $DEFAULT_PROJECT_NAME ps


